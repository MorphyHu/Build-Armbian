BOOTSOURCE='https://github.com/u-boot/u-boot.git'
BOOTBRANCH='tag:v2019.04'
BOOTDIR='u-boot-rk3399'
UBOOT_USE_GCC='> 7.0'

BOOTSIZE=128
BOOTFS_TYPE=fat
UBOOT_TARGET_MAP=";;idbloader.bin uboot.img trust.bin"

ARCH=arm64
KERNEL_IMAGE_TYPE=Image
OFFSET=16

BOOTDELAY=0

OVERLAY_PREFIX='rockchip'
SERIALCON='ttyS2:1500000'

ATFSOURCE='https://github.com/ayufan-rock64/arm-trusted-firmware'
ATFDIR='arm-trusted-firmware-rockchip64'
ATFBRANCH='branch:rockchip'
ATF_USE_GCC='> 6.3'
ATF_TARGET_MAP='M0_CROSS_COMPILE=arm-linux-gnueabi- PLAT=rk3399 DEBUG=1 bl31;;trust.bin'
ATF_TOOLCHAIN2="arm-linux-gnueabi-:> 5.0"

CPUMIN="600000"
CPUMAX="2016000"
GOVERNOR="ondemand"

DISPLAY_MANAGER="lightdm"
KERNEL_USE_GCC='> 7.2'

case $BRANCH in
	default)
	KERNELDIR='linux-rockchip-default'
	KERNELSOURCE='https://github.com/150balbes/rockchip-kernel'
	KERNELBRANCH='tag:20190920'
	SRC_EXTLINUX="extlinux.conf"
	;;

	next)
	KERNELDIR='linux-next'
	KERNELSOURCE='git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git'
	KERNELBRANCH='branch:master'
	SRC_EXTLINUX="next_extlinux.conf"
	;;

	dev)
	KERNELDIR='linux-rockchip-dev'
	KERNELSOURCE='https://github.com/150balbes/rockchip-kernel'
	KERNELBRANCH='branch:test'
	SRC_EXTLINUX="dev_extlinux.conf"
	;;
esac

if [[ $ADD_UBOOT == yes ]]; then
    write_uboot_platform()
    {
#	dd if=$1/idbloader.bin of=$2 seek=64 conv=notrunc status=none >/dev/null 2>&1
#	dd if=$1/uboot.img of=$2 seek=16384 conv=notrunc status=none >/dev/null 2>&1
#	dd if=$1/trust.bin of=$2 seek=24576 conv=notrunc status=none >/dev/null 2>&1
	dd if=$SRC/$BOARD_DIR/u-boot/idbloader.img of=$2 seek=64 conv=notrunc status=none >/dev/null 2>&1
	dd if=$SRC/$BOARD_DIR/u-boot/uboot.img of=$2 seek=16384 conv=notrunc status=none >/dev/null 2>&1
	dd if=$SRC/$BOARD_DIR/u-boot/trust.img of=$2 seek=24576 conv=notrunc status=none >/dev/null 2>&1
    }

	setup_write_uboot_platform()
	{
		if grep -q "ubootpart" /proc/cmdline; then
			local tmp=$(cat /proc/cmdline)
			tmp="${tmp##*ubootpart=}"
			tmp="${tmp%% *}"
			[[ -n $tmp ]] && local part=$(findfs PARTUUID=$tmp 2>/dev/null)
			[[ -n $part ]] && local dev=$(lsblk -n -o PKNAME $part 2>/dev/null)
			[[ -n $dev ]] && DEVICE="/dev/$dev"
		fi
	}

	uboot_custom_postprocess()
	{
		# bootloader image
		local tempfile=$(mktemp)
		tools/mkimage -n rk3399 -T rksd -d $SRC/cache/sources/rkbin-tools/rk33/rk3399_ddr_800MHz_v1.14.bin idbloader.bin
		cat $SRC/cache/sources/rkbin-tools/rk33/rk3399_miniloader_v1.15.bin >> idbloader.bin
		loaderimage --pack --uboot ./u-boot-dtb.bin uboot.img 0x200000
	}

atf_custom_postprocess()
{
	# remove bl31.bin which can be 4+GiB in size and thus may fill the tmpfs mount
	rm -f build/rk322xh/debug/bl31.bin
	# ATF
	trust_merger trust.ini
}

fi

family_tweaks()
{
	source $SRC/$BOARD_DIR/firmware-edge-20190716.sh

	# enable root login via the serial console  ttys2 may be deprecated
	echo "ttyS2" >> $SDCARD/etc/securetty
	echo "ttyFIQ0" >> $SDCARD/etc/securetty

	mkdir -p $SDCARD/boot/u-boot
	cp $SRC/$BOARD_DIR/u-boot/uboot.img $SDCARD/boot/u-boot/uboot.img
	cp $SRC/$BOARD_DIR/u-boot/trust.img $SDCARD/boot/u-boot/trust.img
	install -m 755 $SRC/$BOARD_DIR/install.sh $SDCARD/root/install.sh
	ln -s /root/install.sh $SDCARD/usr/sbin/nand-sata-install
	cp $SRC/$BOARD_DIR/fstab $SDCARD/root/fstab

	install -m 755 $SRC/$BOARD_DIR/ddbr $destination/usr/bin/

	mkdir -p $SDCARD/boot/extlinux
	cp $SRC/$BOARD_DIR/$SRC_EXTLINUX $SDCARD/boot/extlinux/extlinux.conf
#        if [[ $BUILD_DESKTOP = yes && $BRANCH = default ]]; then
	    cp $SRC/packages/bsp/mpv/mpv_mainline.conf $SDCARD/etc/mpv/mpv.conf
	    sed -e 's/exit 0//g' -i $SDCARD/etc/rc.local
	    echo "su -c 'hciattach /dev/ttyS0 bcm43xx 2000000'" >> $SDCARD/etc/rc.local
	    echo "exit 0" >> $SDCARD/etc/rc.local
#	fi
}
