os: linux
dist: bionic
language: c
compiler: gcc
cache:
  ccache: true
git:
  depth: 1
  submodules: false
notifications:
  email: false
env:
  global:
    - TERM=dumb
matrix:
  include:
    - env: RELEASE=disco BUILD_DESKTOP=no BUILD_MINIMAL=no
    - env: RELEASE=bionic BUILD_DESKTOP=no BUILD_MINIMAL=no
    - env: RELEASE=buster BUILD_DESKTOP=no BUILD_MINIMAL=no
    # minimal build
    - env: RELEASE=disco BUILD_DESKTOP=no BUILD_MINIMAL=yes
    - env: RELEASE=bionic BUILD_DESKTOP=no BUILD_MINIMAL=yes
    - env: RELEASE=buster BUILD_DESKTOP=no BUILD_MINIMAL=yes
    # desktop build
    - env: RELEASE=disco BUILD_DESKTOP=yes BUILD_MINIMAL=no
    - env: RELEASE=bionic BUILD_DESKTOP=yes BUILD_MINIMAL=no
    - env: RELEASE=buster BUILD_DESKTOP=yes BUILD_MINIMAL=no
  allow_failures:
    - env: RELEASE=disco BUILD_DESKTOP=yes BUILD_MINIMAL=no
    - env: RELEASE=bionic BUILD_DESKTOP=yes BUILD_MINIMAL=no
    - env: RELEASE=buster BUILD_DESKTOP=yes BUILD_MINIMAL=no
before_install:
  - sudo apt update
  - sudo apt install -y gnupg1 gpgv1 --no-install-recommends
  - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys ED75B5A4483DA07C
  - echo "deb http://repo.aptly.info/ nightly main" | sudo tee /etc/apt/sources.list.d/aptly.list
  - sudo dpkg --add-architecture i386
install:
  - sudo apt update
  - |
    sudo apt install -y dialog lsb-release binutils ca-certificates device-tree-compiler \
      pv bc lzop zip binfmt-support build-essential ccache debootstrap ntpdate gawk gcc-arm-linux-gnueabihf \
      qemu-user-static u-boot-tools uuid-dev zlib1g-dev unzip libusb-1.0-0-dev parted pkg-config libncurses5-dev whiptail \
      debian-keyring debian-archive-keyring f2fs-tools libfile-fcntllock-perl rsync libssl-dev nfs-kernel-server btrfs-tools \
      ncurses-term p7zip-full kmod dosfstools libc6-dev-armhf-cross fakeroot xxd \
      patchutils python liblz4-tool libpython2.7-dev linux-base swig libpython-dev \
      systemd-container udev g++-5-arm-linux-gnueabihf lib32stdc++6 cpio tzdata psmisc acl \
      libc6-i386 lib32ncurses5 lib32tinfo5 locales ncurses-base zlib1g:i386 pixz bison libbison-dev flex libfl-dev \
      pigz aptly aria2 cryptsetup cryptsetup-bin apt-cacher-ng --no-install-recommends
before_script:
  - df -h
  - free -mh
  - sudo ccache -M 5.0G
  - |
    if [ -z "$TRAVIS_TAG" ] ; then
      export KERNEL_ONLY="yes"
    else
      export KERNEL_ONLY="no" PROGRESS_DISPLAY="none"
    fi
script:
  - cd "$TRAVIS_BUILD_DIR" && touch .ignore_changes
  - |
    ./compile.sh BOARD=aml-g12 BRANCH=default RELEASE=$RELEASE BUILD_MINIMAL=$BUILD_MINIMAL BUILD_DESKTOP=$BUILD_DESKTOP \
      KERNEL_ONLY=$KERNEL_ONLY KERNEL_CONFIGURE=no PROGRESS_DISPLAY=$PROGRESS_DISPLAY
after_success:
  - df -h
  - free -mh
  - cd "$TRAVIS_BUILD_DIR"
  - ccache -s
  - ls -alh
  - find "output/"
before_deploy:
  - mkdir "$HOME/imgs" && cd "$HOME/imgs"
  - find "$TRAVIS_BUILD_DIR/output/" -name *.img -exec sudo mv {} "$HOME/imgs" \;
  - sudo xz -v -z *.img && xz -l *.xz
deploy:
  provider: releases
  file_glob: true
  file: "$HOME/imgs/*.xz"
  cleanup: false
  edge: true
  token: $GITHUB_TOKEN
  on:
    tags: true
